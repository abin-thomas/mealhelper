{"version":3,"sources":["HomePage.js","SingleMealDetails.js","SingleMealItem.js","MealCategories.js","MealByArea.js","MealIngredients.js","NavContents.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","useState","meals","fillMealList","useEffect","getHomeRequest","a","fetch","homeRequest","json","randomMeal","map","meal","key","idMeal","src","strMealThumb","height","alt","strMeal","strCategory","strArea","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient8","strMeasure8","strIngredient9","strMeasure9","strIngredient10","strMeasure10","strIngredient11","strMeasure11","strIngredient12","strMeasure12","strIngredient13","strMeasure13","strIngredient14","strMeasure14","strIngredient15","strMeasure15","strIngredient16","strMeasure16","strIngredient17","strMeasure17","strIngredient18","strMeasure18","strIngredient19","strMeasure19","strIngredient20","strMeasure20","strInstructions","href","strYoutube","target","rel","SingleMealDetailsPage","currentSelection","getSingleMealDetailsRequest","mealID","singleMealRequest","singleMeal","id","width","MealDetails","ReactDOM","render","document","getElementById","SelectedSingleItemPage","apiFetchSource","window","scrollTo","mealCategory","mealByArea","ingredientName","getSingleMealRequest","singleItemRequest","singleItems","onClick","bind","MealCategoriesPage","getMeal_CategoriesRequest","meal_categoryRequest","mealCategories","categories","idCategory","strCategoryThumb","MealByAreaPage","getMealByAreaRequest","mealByAreas","DrinkDetails","MealIngredientsPage","ingredients","fillIngredients","getIngredientsRequest","ingredientRequest","fullIngredients","path","ingredient","strIngredient","NavContents","pageName","className","type","class","this","selectDisplayPage","name","Component","App","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb98b765.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst HomePage = () => {\r\n  const [meals, fillMealList] = useState([]);\r\n  useEffect(() => {\r\n    getHomeRequest();\r\n  }, []);\r\n\r\n  const getHomeRequest = async () => {\r\n    const homeRequest = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/random.php\"\r\n    );\r\n    const randomMeal = await homeRequest.json();\r\n    fillMealList(randomMeal.meals);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome to MyMealDB</h2>\r\n      <p>\r\n        A Webpage about meals created using ReactJS as a project for my Course.\r\n        I am using the TheMealDB API in this to get the details about the\r\n        different meals.\r\n      </p>\r\n      <p>The following is a random meal fetched from the API.</p>\r\n      {meals.map((meal) => (\r\n        <div key={meal.idMeal}>\r\n          <img src={meal.strMealThumb} height=\"250px\" alt={meal.strMeal}></img>\r\n          <div>\r\n            <h4>Name : {meal.strMeal}</h4>\r\n            <p>Meal Category : {meal.strCategory}</p>\r\n            <p>Area Originated : {meal.strArea}</p>\r\n            <p>\r\n              <h4>Ingredients :</h4> <br />\r\n              <div>\r\n                {meal.strIngredient1 ? (\r\n                  <span>\r\n                    {meal.strIngredient1} : {meal.strMeasure1}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient2 ? (\r\n                  <span>\r\n                    {meal.strIngredient2} : {meal.strMeasure2}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient3 ? (\r\n                  <span>\r\n                    {meal.strIngredient3} : {meal.strMeasure3}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient4 ? (\r\n                  <span>\r\n                    {meal.strIngredient4} : {meal.strMeasure4}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient5 ? (\r\n                  <span>\r\n                    {meal.strIngredient5} : {meal.strMeasure5}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient6 ? (\r\n                  <span>\r\n                    {meal.strIngredient6} : {meal.strMeasure6}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient7 ? (\r\n                  <span>\r\n                    {meal.strIngredient7} : {meal.strMeasure7}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient8 ? (\r\n                  <span>\r\n                    {meal.strIngredient8} : {meal.strMeasure8}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient9 ? (\r\n                  <span>\r\n                    {meal.strIngredient9} : {meal.strMeasure9}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient10 ? (\r\n                  <span>\r\n                    {meal.strIngredient10} : {meal.strMeasure10}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient11 ? (\r\n                  <span>\r\n                    {meal.strIngredient11} : {meal.strMeasure11}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient12 ? (\r\n                  <span>\r\n                    {meal.strIngredient12} : {meal.strMeasure12}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient13 ? (\r\n                  <span>\r\n                    {meal.strIngredient13} : {meal.strMeasure13}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient14 ? (\r\n                  <span>\r\n                    {meal.strIngredient14} : {meal.strMeasure14}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient15 ? (\r\n                  <span>\r\n                    {meal.strIngredient15} : {meal.strMeasure15}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient16 ? (\r\n                  <span>\r\n                    {meal.strIngredient16} : {meal.strMeasure16}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient17 ? (\r\n                  <span>\r\n                    {meal.strIngredient17} : {meal.strMeasure17}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient18 ? (\r\n                  <span>\r\n                    {meal.strIngredient18} : {meal.strMeasure18}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient19 ? (\r\n                  <span>\r\n                    {meal.strIngredient19} : {meal.strMeasure19}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient20 ? (\r\n                  <span>\r\n                    {meal.strIngredient20} : {meal.strMeasure20}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n              </div>\r\n            </p>\r\n            <p>\r\n              Preparation Instruction:\r\n              <br />\r\n              {meal.strInstructions}\r\n            </p>\r\n            <p>\r\n              YouTube :\r\n              <a\r\n                href={meal.strYoutube}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {meal.strYoutube}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SingleMealDetails.css\";\r\n\r\nconst SingleMealDetailsPage = (currentSelection) => {\r\n  const [meals, fillMealList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getSingleMealDetailsRequest();\r\n  });\r\n\r\n  const getSingleMealDetailsRequest = async () => {\r\n    const singleMealRequest = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\" +\r\n        currentSelection.mealID\r\n    );\r\n    const singleMeal = await singleMealRequest.json();\r\n    fillMealList(singleMeal.meals);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        Here you will be able to view a the full details about the meal from the\r\n        API.\r\n      </p>\r\n      {meals.map((meal) => (\r\n        <div key={meal.idMeal} id=\"SingleMealDiv\">\r\n          <img\r\n            src={meal.strMealThumb}\r\n            height=\"400px\"\r\n            width=\"50%\"\r\n            alt={meal.strMeal}\r\n          ></img>\r\n          <div>\r\n            <h4>Name : {meal.strMeal}</h4>\r\n            <p>Meal Category : {meal.strCategory}</p>\r\n            <p>Area Originated : {meal.strArea}</p>\r\n            <p>\r\n              Ingredients : <br />\r\n              <div>\r\n                {meal.strIngredient1 ? (\r\n                  <span>\r\n                    {meal.strIngredient1} : {meal.strMeasure1}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient2 ? (\r\n                  <span>\r\n                    {meal.strIngredient2} : {meal.strMeasure2}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient3 ? (\r\n                  <span>\r\n                    {meal.strIngredient3} : {meal.strMeasure3}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient4 ? (\r\n                  <span>\r\n                    {meal.strIngredient4} : {meal.strMeasure4}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient5 ? (\r\n                  <span>\r\n                    {meal.strIngredient5} : {meal.strMeasure5}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient6 ? (\r\n                  <span>\r\n                    {meal.strIngredient6} : {meal.strMeasure6}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient7 ? (\r\n                  <span>\r\n                    {meal.strIngredient7} : {meal.strMeasure7}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient8 ? (\r\n                  <span>\r\n                    {meal.strIngredient8} : {meal.strMeasure8}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient9 ? (\r\n                  <span>\r\n                    {meal.strIngredient9} : {meal.strMeasure9}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient10 ? (\r\n                  <span>\r\n                    {meal.strIngredient10} : {meal.strMeasure10}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient11 ? (\r\n                  <span>\r\n                    {meal.strIngredient11} : {meal.strMeasure11}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient12 ? (\r\n                  <span>\r\n                    {meal.strIngredient12} : {meal.strMeasure12}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient13 ? (\r\n                  <span>\r\n                    {meal.strIngredient13} : {meal.strMeasure13}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient14 ? (\r\n                  <span>\r\n                    {meal.strIngredient14} : {meal.strMeasure14}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient15 ? (\r\n                  <span>\r\n                    {meal.strIngredient15} : {meal.strMeasure15}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient16 ? (\r\n                  <span>\r\n                    {meal.strIngredient16} : {meal.strMeasure16}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient17 ? (\r\n                  <span>\r\n                    {meal.strIngredient17} : {meal.strMeasure17}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient18 ? (\r\n                  <span>\r\n                    {meal.strIngredient18} : {meal.strMeasure18}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient19 ? (\r\n                  <span>\r\n                    {meal.strIngredient19} : {meal.strMeasure19}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                {meal.strIngredient20 ? (\r\n                  <span>\r\n                    {meal.strIngredient20} : {meal.strMeasure20}\r\n                    <br />\r\n                  </span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n              </div>\r\n            </p>\r\n            <p>\r\n              Preparation Instruction:\r\n              <br />\r\n              {meal.strInstructions}\r\n            </p>\r\n            <p>\r\n              YouTube :\r\n              <a\r\n                href={meal.strYoutube}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {meal.strYoutube}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMealDetailsPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./SingleMealItem.css\";\r\nimport SingleMealDetailsPage from \"./SingleMealDetails\";\r\n\r\nvar MealDetails = (currentSelection) => {\r\n  ReactDOM.render(\r\n    <SingleMealDetailsPage mealID={currentSelection} />,\r\n    document.getElementById(\"ContentRight\")\r\n  );\r\n};\r\nconst SelectedSingleItemPage = (currentSelection) => {\r\n  const [meals, fillMealList] = useState([]);\r\n  var apiFetchSource;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (currentSelection.mealCategory) {\r\n      apiFetchSource =\r\n        \"https://www.themealdb.com/api/json/v1/1/filter.php?c=\" +\r\n        currentSelection.mealCategory;\r\n    }\r\n    if (currentSelection.mealByArea) {\r\n      apiFetchSource =\r\n        \"https://www.themealdb.com/api/json/v1/1/filter.php?a=\" +\r\n        currentSelection.mealByArea;\r\n    }\r\n\r\n    if (currentSelection.ingredientName) {\r\n      apiFetchSource =\r\n        \"https://www.themealdb.com/api/json/v1/1/filter.php?i=\" +\r\n        currentSelection.ingredientName;\r\n    }\r\n    getSingleMealRequest();\r\n  }, []);\r\n\r\n  const getSingleMealRequest = async () => {\r\n    const singleItemRequest = await fetch(apiFetchSource);\r\n    const singleItems = await singleItemRequest.json();\r\n    fillMealList(singleItems.meals);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {meals.map((meal) => (\r\n        <div\r\n          key={meal.idMeal}\r\n          id=\"single_MealDiv\"\r\n          onClick={MealDetails.bind(this, meal.idMeal)}\r\n        >\r\n          <h4>{meal.strMeal}</h4>\r\n          <img\r\n            src={meal.strMealThumb}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            alt={meal.strMealThumb}\r\n          ></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedSingleItemPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./MealCategories.css\";\r\nimport SelectedSingleItemPage from \"./SingleMealItem\";\r\n\r\nvar MealDetails = (currentSelection) => {\r\n  ReactDOM.render(\r\n    <SelectedSingleItemPage mealCategory={currentSelection} />,\r\n    document.getElementById(\"ContentRight\")\r\n  );\r\n};\r\nconst MealCategoriesPage = () => {\r\n  const [meals, fillMealList] = useState([]);\r\n  useEffect(() => {\r\n    getMeal_CategoriesRequest();\r\n  }, []);\r\n\r\n  const getMeal_CategoriesRequest = async () => {\r\n    const meal_categoryRequest = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/categories.php\"\r\n    );\r\n    const mealCategories = await meal_categoryRequest.json();\r\n    fillMealList(mealCategories.categories);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of different Meal Categories</h2>\r\n      <p>\r\n        Here you will be able to view a list of different meal categories from\r\n        the API.\r\n      </p>\r\n      {meals.map((meal) => (\r\n        <div\r\n          key={meal.idCategory}\r\n          id=\"meal_catDiv\"\r\n          onClick={MealDetails.bind(this, meal.strCategory)}\r\n        >\r\n          <h3>{meal.strCategory}</h3>\r\n          <img\r\n            src={meal.strCategoryThumb}\r\n            height=\"300px\"\r\n            width=\"100%\"\r\n            alt={meal.strCategory}\r\n          ></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealCategoriesPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./MealByArea.css\";\r\nimport SelectedSingleItemPage from \"./SingleMealItem\";\r\n\r\nvar MealDetails = (currentSelection) => {\r\n  ReactDOM.render(\r\n    <SelectedSingleItemPage mealByArea={currentSelection} />,\r\n    document.getElementById(\"ContentRight\")\r\n  );\r\n};\r\nconst MealByAreaPage = () => {\r\n  const [meals, fillMealList] = useState([]);\r\n  useEffect(() => {\r\n    getMealByAreaRequest();\r\n  }, []);\r\n\r\n  const getMealByAreaRequest = async () => {\r\n    const mealByArea = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/list.php?a=list\"\r\n    );\r\n    const mealByAreas = await mealByArea.json();\r\n    fillMealList(mealByAreas.meals);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of geographical wise meal types</h2>\r\n      <p>\r\n        Here you will be able to view a list of areas by which the meals are\r\n        grouped from the API.\r\n      </p>\r\n      {meals.map((meal) => (\r\n        <div\r\n          key={meal.strArea}\r\n          id=\"meal_ByAreaDiv\"\r\n          onClick={MealDetails.bind(this, meal.strArea)}\r\n        >\r\n          <h3>{meal.strArea}</h3>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealByAreaPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./MealIngredients.css\";\r\nimport SelectedSingleItemPage from \"./SingleMealItem\";\r\n\r\nvar DrinkDetails = (currentSelection) => {\r\n  ReactDOM.render(\r\n    <SelectedSingleItemPage ingredientName={currentSelection} />,\r\n    document.getElementById(\"ContentRight\")\r\n  );\r\n};\r\n\r\nconst MealIngredientsPage = () => {\r\n  const [ingredients, fillIngredients] = useState([]);\r\n  useEffect(() => {\r\n    getIngredientsRequest();\r\n  }, []);\r\n\r\n  const getIngredientsRequest = async () => {\r\n    const ingredientRequest = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/list.php?i=list\"\r\n    );\r\n    const fullIngredients = await ingredientRequest.json();\r\n    fillIngredients(fullIngredients.meals);\r\n  };\r\n  var path = (ingredientName) => {\r\n    var src = \"https://www.themealdb.com/images/ingredients/\";\r\n    src += ingredientName;\r\n    src += \".png\";\r\n    return src;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of Ingredients</h2>\r\n      <p>\r\n        Here you will be able to view a list of ingredients used for meals from\r\n        the API.\r\n      </p>\r\n      {ingredients.map((ingredient) => (\r\n        <div\r\n          key={ingredient.strIngredient}\r\n          id=\"ingredientDiv\"\r\n          onClick={DrinkDetails.bind(this, ingredient.strIngredient)}\r\n        >\r\n          <h3>{ingredient.strIngredient}</h3>\r\n\r\n          <img\r\n            src={path(ingredient.strIngredient)}\r\n            height=\"250px\"\r\n            alt={ingredient.strIngredient}\r\n          ></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealIngredientsPage;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./NavContents.css\";\r\nimport HomePage from \"./HomePage\";\r\nimport MealCategoriesPage from \"./MealCategories\";\r\nimport MealByAreaPage from \"./MealByArea\";\r\nimport MealIngredientsPage from \"./MealIngredients\";\r\n\r\nclass NavContents extends Component {\r\n  selectDisplayPage(pageName) {\r\n    switch (pageName) {\r\n      case \"Home\": {\r\n        ReactDOM.render(<HomePage />, document.getElementById(\"ContentRight\"));\r\n        break;\r\n      }\r\n      case \"MealCategories\": {\r\n        ReactDOM.render(\r\n          <MealCategoriesPage />,\r\n          document.getElementById(\"ContentRight\")\r\n        );\r\n        break;\r\n      }\r\n      case \"MealByArea\": {\r\n        ReactDOM.render(\r\n          <MealByAreaPage />,\r\n          document.getElementById(\"ContentRight\")\r\n        );\r\n        break;\r\n      }\r\n      case \"MealIngredients\": {\r\n        ReactDOM.render(\r\n          <MealIngredientsPage />,\r\n          document.getElementById(\"ContentRight\")\r\n        );\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"navList\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary btn-lg\"\r\n            onClick={this.selectDisplayPage.bind(this, \"Home\")}\r\n          >\r\n            <box-icon name=\"home-alt\"></box-icon>Home\r\n          </button>\r\n        </div>\r\n        <div className=\"navList\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary btn-lg\"\r\n            onClick={this.selectDisplayPage.bind(this, \"MealCategories\")}\r\n          >\r\n            <box-icon type=\"solid\" name=\"food-menu\"></box-icon> Meal Categories\r\n          </button>\r\n        </div>\r\n        <div className=\"navList\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary btn-lg\"\r\n            onClick={this.selectDisplayPage.bind(this, \"MealByArea\")}\r\n          >\r\n            <box-icon name=\"map-alt\" type=\"solid\"></box-icon> Meal By Area\r\n          </button>\r\n        </div>\r\n        <div className=\"navList\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary btn-lg\"\r\n            onClick={this.selectDisplayPage.bind(this, \"MealIngredients\")}\r\n          >\r\n            <box-icon name=\"book-content\"></box-icon> Ingredients\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavContents;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport NavContents from \"./NavContents\";\nimport HomePage from \"./HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"FullPage\">\n      <div className=\"NavBar\"></div>\n      <div className=\"Content\">\n        <div className=\"ContentLeft\">\n          <NavContents />\n        </div>\n        <div id=\"ContentRight\" className=\"ContentRight\">\n          <HomePage />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}